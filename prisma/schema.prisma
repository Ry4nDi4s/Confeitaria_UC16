// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}
//Gabriel
model Order {
  id Int @id @default(autoincrement())

  which_product String
  who_order String
  value Float
  quantity Int
  delivery_day DateTime
  
  createdAt DateTime @map("created_at") @default (now())
  updatedAt DateTime @map("updated_at") @updatedAt

  userId Int @map ("user_id")
  user  User @relation(fields: [userId], references: [id])  

  paymentId Int @map ("payment_id") @unique
  payment  Payment @relation(fields: [paymentId], references: [id])  

  carts Cart[]

  @@map("habits")
}

model Payment {
  id Int  @id @default(autoincrement())
 
  card String
  pix String
  money Float
  value Float
  scheduling String

  createdAt DateTime @map("created_at") @default(now())
  updatedAt DateTime  @map("updated_at") @updatedAt

  order Order?
}  

// Guilherme
model Product {
  id Int @id @default(autoincrement())
  
  description String
  name String
  quantify Int 
  stock Float
  maturity DateTime

  createdAt DateTime @map("created_at") @default(now())
  updatedAt DateTime @map("updated_at") @updatedAt

  carts Cart[]
  receitas Receita[]
}



model User {
  id Int @id @default(autoincrement())

  name String
  email String
  password String
  phone String
  CPF String

  createdAt DateTime @map("created_at") @default(now())
  updatedAt DateTime @map("updated_at") @updatedAt
  
  orders Order[]

  @@map("users")
}

// Guilherme
model Cart{
  id Int @id @default(autoincrement())

  quantity Int

  // FK - produtos
  produtoId Int @map("produto_id")
  produto Product @relation(fields: [produtoId], references: [id])
 
  // FK - pedidos
  orderId Int @map("order_id")
  order Order @relation(fields: [orderId], references: [id])

}
 
model Receita{
  id Int @id @default(autoincrement())

  ingredientId Int @map("receita_id")
  ingrediente Ingrediente @relation(fields: [ingredientId], references: [id])

  produtoId Int @map("receitas_id")
  produto Product @relation(fields: [produtoId], references: [id])

  description String
  name String
  quantify String
  stock String
  maturity DateTime
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt



}
//Gabriel
model Ingrediente{
  id Int @id @default(autoincrement())

  description String
  name String
  quantify String
  stock String
  maturity DateTime
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt



  receitas Receita[]
}